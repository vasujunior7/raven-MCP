#!/usr/bin/env python3
"""Show the clean, organized project structure."""

import os

def show_project_structure():
    """Display the organized project structure."""
    
    print("🧠 MCP Server — Clean Project Structure")
    print("=" * 60)
    print()
    
    print("📁 Project Organization:")
    print("```")
    print("MCP-server/")
    print("├── 🚀 Core Server Files")
    print("│   ├── main.py              # MCP server entry point")
    print("│   ├── server.py            # HTTP server wrapper")
    print("│   └── raven_client.py      # LLM client integration")
    print("│")
    print("├── 🧩 Core Architecture")
    print("│   ├── core/")
    print("│   │   ├── parser.py        # Natural language processing")
    print("│   │   ├── router.py        # Tool routing")
    print("│   │   ├── executor.py      # Tool execution")
    print("│   │   └── postprocess.py   # Response processing")
    print("│")
    print("├── 🔧 Tools & Extensions")
    print("│   ├── tools/")
    print("│   │   └── polymarket_fetcher.py  # Prediction markets")
    print("│   └── utils/")
    print("│       ├── logger.py        # Logging utilities")
    print("│       ├── http.py          # HTTP client")
    print("│       ├── formatter.py     # Response formatting")
    print("│       └── llm_reasoner.py  # LLM integration")
    print("│")
    print("├── ⚙️ Configuration")
    print("│   ├── config/")
    print("│   │   ├── keyword_map.json # NL keyword mapping")
    print("│   │   ├── defaults.json    # Default settings")
    print("│   │   └── categories.yaml  # Event categories")
    print("│   └── .env                 # Environment variables")
    print("│")
    print("├── 👥 Client Interfaces")
    print("│   └── client/")
    print("│       ├── cli.py           # Command-line interface")
    print("│       └── mcp_protocol.py  # MCP protocol impl")
    print("│")
    print("├── 🧪 Test Suite")
    print("│   └── tests/")
    print("│       ├── run_tests.py     # Test runner")
    print("│       ├── test_mcp_llm.py  # Main integration test")
    print("│       ├── test_detailed.py # Debugging test")
    print("│       ├── test_endpoints.py# API tests")
    print("│       └── README.md        # Test documentation")
    print("│")
    print("└── 📚 Documentation")
    print("    ├── README.md            # Main documentation")
    print("    ├── requirements.txt     # Dependencies")
    print("    └── .gitignore          # Git ignore rules")
    print("```")
    print()
    
    print("✅ Organization Benefits:")
    print("  🎯 Clean separation of concerns")
    print("  🔍 Easy to find and maintain code")
    print("  🧪 Isolated test environment")
    print("  📖 Clear documentation structure")
    print("  🚀 Production-ready layout")
    print()
    
    print("🚀 Quick Start Commands:")
    print("  # Start MCP server")
    print("  python server.py --port 8001")
    print()
    print("  # Run main integration test")
    print("  cd tests && python test_mcp_llm.py")
    print()
    print("  # Use CLI interface")
    print("  python client/cli.py --interactive")
    print()
    print("  # Run Raven LLM client")
    print("  python raven_client.py")
    print()
    
    print("🎉 All test scripts successfully organized in tests/ folder!")

if __name__ == "__main__":
    show_project_structure()